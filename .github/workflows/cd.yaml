name: CD

on:
  push:
    branches:
      - main
      - master
      - feat/add-basic-frontend # TODO: Remove after testing before merging to main
    # Trigger on version tags for production deployments
    tags:
      - 'v*.*.*'  # Matches tags like v1.0.0, v2.1.3, etc.

permissions:
  id-token: write
  contents: read

env:
  # Set environment based on whether the ref is a tag or a branch
  # If it's a tag starting with 'v', use 'production', else 'development'
  DEPLOYMENT_ENVIRONMENT: ${{ startsWith(github.ref, 'refs/tags/v') && 'production' || 'development' }}
  AWS_REGION: ${{ vars.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID }}
  AWS_DEPLOYMENT_ROLE: ${{ vars.AWS_DEPLOYMENT_ROLE_NAME }}
  CLOUDFLARE_ZONE_ID: ${{ vars.CLOUDFLARE_ZONE_ID }}
  TERRAFORM_BACKEND_BUCKET: ${{ vars.TERRAFORM_BACKEND_BUCKET }}

jobs:
  cd:
    # Set environment based on whether the ref is a tag or a branch
    # If it's a tag starting with 'v', use 'production', else 'development'
    environment:  ${{ startsWith(github.ref, 'refs/tags/v') && 'production' || 'development' }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]

    steps:
    - uses: actions/checkout@v5

    - name: Display Deployment Context
      run: |
        echo "::group::Deployment Context"
        echo "Deploying to environment: ${{ startsWith(github.ref, 'refs/tags/v') && 'production' || 'development' }}"
        echo "GitHub Ref: ${{ github.ref }}"
        echo "GitHub Event: ${{ github.event_name }}"
        echo "AWS Region: ${{ env.AWS_REGION }}"
        echo "AWS ACCOUNT ID: ${{ env.AWS_ACCOUNT_ID }}"
        echo "AWS Deployment Role: ${{ env.AWS_DEPLOYMENT_ROLE }}"
        echo "::endgroup::"

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v5.0.0
      with:
        aws-region: ${{ env.AWS_REGION }}
        role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/${{ env.AWS_DEPLOYMENT_ROLE }}
        role-session-name: DeploymentSession

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.13.4

    - name: Terraform Init
      run: terraform init
      working-directory: ./aws

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: ./aws