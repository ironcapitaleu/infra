name: CI

on:
  pull_request:
    branches:
      - main
      - master
  push:
    branches:
      - ci/add-ci-checks

permissions:
  contents: read
  id-token: write

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID }}
  AWS_DEPLOYMENT_ROLE: ${{ vars.AWS_DEPLOYMENT_ROLE_NAME }}

jobs:
  ci:
    # Set environment based on whether the ref is a tag or a branch
    # If it's a tag starting with 'v', use 'production', else 'development'
    environment:  ${{ startsWith(github.ref, 'refs/tags/v') && 'production' || 'development' }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
        rust: [stable]

    steps:

    - uses: actions/checkout@v5
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: latest
    - uses: terraform-linters/setup-tflint@v5
      name: Setup TFLint
      with:
        tflint_version: v0.52.0
    
    - name: Install the latest version of uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"
    - name: Install Checkov
      run: uv tool install checkov

    - name: Display Execution Context
      run: |
        echo "::group::Execution Context"
        echo "Environment: ${{ startsWith(github.ref, 'refs/tags/v') && 'production' || 'development' }}"#
        echo "AWS Region: ${{ env.AWS_REGION }}"
        echo "AWS ACCOUNT ID: ${{ env.AWS_ACCOUNT_ID }}"
        echo "AWS Deployment Role: ${{ env.AWS_DEPLOYMENT_ROLE }}"
        echo "GitHub Ref: ${{ github.ref }}"
        echo "GitHub Event: ${{ github.event_name }}"
        echo "Terraform version: $(terraform --version)"
        echo "TFLint version: $(tflint --version)"
        echo "UV version: $(uv --version)"
        echo "Checkov version: $(checkov --version)"


    - name: Terraform Init
      run: terraform init --input=false

    - name: Code Formatting Check
      run: terraform fmt --check --recursive

    - name: Syntax Validation
      run: terraform validate

    - name: Security Checks
      run: checkov

    - name: Prepare Linting
      run: tflint --init
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Linting
      run: tflint --recursive -f compact

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v5.0.0
      with:
        aws-region: ${{ env.AWS_REGION }}
        role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/${{ env.AWS_DEPLOYMENT_ROLE }}
        role-session-name: CiSession

    - name: Terraform Plan
      run: terraform plan -input=false --out=tfplan
